{#
/**
 * @file
 * Theme override to display a pager.
 *
 * Available variables:
 * - items: List of pager items.
 *   The list is keyed by the following elements:
 *   - first: Item for the first page; not present on the first page of results.
 *   - previous: Item for the previous page; not present on the first page
 *     of results.
 *   - next: Item for the next page; not present on the last page of results.
 *   - last: Item for the last page; not present on the last page of results.
 *   - pages: List of pages, keyed by page number.
 *   Sub-sub elements:
 *   items.first, items.previous, items.next, items.last, and each item inside
 *   items.pages contain the following elements:
 *   - href: URL with appropriate query parameters for the item.
 *   - attributes: A keyed list of HTML attributes for the item.
 *   - text: The visible text used for the item link, such as "‹ Previous"
 *     or "Next ›".
 * - current: The page number of the current page.
 * - ellipses: If there are more pages than the quantity allows, then an
 *   ellipsis before or after the listed pages may be present.
 *   - previous: Present if the currently visible list of pages does not start
 *     at the first page.
 *   - next: Present if the visible list of pages ends before the last page.
 *
 * Custom variables:
 * - last_page_number: The number of the last page of all results.
 *
 * @see template_preprocess_pager()
 * @see uwmbase_preprocess_pager()
 */
#}
{#
  TODO: Note that the previous, next, first, last item text values are all
  overridden in the template, to ensure consistency. Would it be better to use
  defaults in the template, to allow configuration to override these per case
  if desired?
#}
{% if items %}
  <nav class="pager" role="navigation" aria-labelledby="pagination-heading">
    <h4 id="pagination-heading" class="visually-hidden">{{ 'Pagination'|t }}</h4>

    <ul class="pager__items js-pager__items">

      {#
        Print "Previous" item if we are not on the first page.
        The mobile link is the arrow only; desktop link is the text with arrow
        outside.
      #}
      {% if items.previous %}
        <li class="pager__item pager__item--text pager__item--previous">
          <i class="fa fa-angle-left arrow-decorative" aria-hidden="true"></i>
          <a href="{{ items.previous.href }}" title="{{ 'Go to previous page'|t }}" rel="prev"{{ items.previous.attributes|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Previous page'|t }}</span>
            <i class="fa fa-angle-left arrow-linked" aria-hidden="true"></i>
            <span class="link-text" aria-hidden="true">{{ 'Previous'|t }}{# {{ items.previous.text|default('Previous'|t) }} #}</span>
          </a>
        </li>
      {% endif %}

      {#
        Print first item if we are not on the first page.
        This is the first page number, i.e. "1".
      #}
      {% if items.first %}
        <li class="pager__item pager__item--first">
          <a href="{{ items.first.href }}" title="{{ 'Go to first page'|t }}"{{ items.first.attributes|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'First page'|t }}</span>
            <span aria-hidden="true">1{# {{ items.first.text|default('1') }} #}</span>
          </a>
        </li>
      {% endif %}

      {# Add an ellipsis if there are further previous pages. #}
      {% if ellipses.previous %}
        <li class="pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}

      {# Now generate the actual pager piece. #}
      {% for key, item in items.pages %}

        {#
          Add a class to each page number item to denote how many links offset
          from the current page it is. This allows us to hide some of the page
          links responsively.
        #}
        {% set current_offset = (current < key ? key - current : current - key) %}

        <li class="pager__item current-offset-{{ current_offset }}{{ current == key ? ' is-active' : '' }}">
          {% if current == key %}
            {% set title = 'Current page'|t %}
          {% else %}
            {% set title = 'Go to page @key'|t({'@key': key}) %}
          {% endif %}
          <a href="{{ item.href }}" title="{{ title }}"{{ item.attributes|without('href', 'title') }}>
            <span class="visually-hidden">
              {{ current == key ? 'Current page'|t : 'Page'|t }}
            </span>
            {{- key -}}
          </a>
        </li>
      {% endfor %}

      {# Add an ellipsis if there are further next pages. #}
      {% if ellipses.next %}
        <li class="pager__item pager__item--ellipsis" role="presentation">&hellip;</li>
      {% endif %}

      {#
        Print last item if we are not on the last page.
        This is the last page number.
      #}
      {% if items.last %}
        <li class="pager__item pager__item--last">
          <a href="{{ items.last.href }}" title="{{ 'Go to last page'|t }}"{{ items.last.attributes|without('href', 'title') }}>
            <span class="visually-hidden">{{ 'Last page'|t }}</span>
            <span aria-hidden="true">{{ last_page_number }}{# {{ items.last.text|default(last_page_number) }} #}</span>
          </a>
        </li>
      {% endif %}

      {#
        Print "Next" link if we are not on the last page.
        The mobile link is the arrow only; desktop link is the text with arrow
        outside.
      #}
      {% if items.next %}
        <li class="pager__item pager__item--text pager__item--next">
          <a href="{{ items.next.href }}" title="{{ 'Go to next page'|t }}" rel="next"{{ items.next.attributes|without('href', 'title', 'rel') }}>
            <span class="visually-hidden">{{ 'Next page'|t }}</span>
            <span class="link-text" aria-hidden="true">{{ 'Next'|t }}{# {{ items.next.text|default('Next'|t) }} #}</span>
            <i class="fa fa-angle-right arrow-linked" aria-hidden="true"></i>
          </a>
          <i class="fa fa-angle-right arrow-decorative" aria-hidden="true"></i>
        </li>
      {% endif %}

    </ul>
  </nav>
{% endif %}
