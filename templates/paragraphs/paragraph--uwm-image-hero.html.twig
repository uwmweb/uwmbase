{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set element = element ?: 'div' %}
{% set classes = classes ?: ['paragraph', 'paragraph--type--' ~ paragraph.bundle|clean_class, view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,] %}

{{ attach_library('uwmbase/image-hero') }}


{% block paragraph %}
  <{{ element }}{{ attributes.addClass(classes) }} id="ppg-{{ paragraph.id() }}">

    <div class="uwm-image-hero__background" style="background-image: url({{ file_url(content.field_uwm_media.0['#media'].image.entity.uri.value) }})">
        {% block content %}
        <div class="container container-xl">
          <div class="row uwm-image-hero justify-content-between">
            <div class="uwm-image-hero__content col-lg-8">
              <h1 class="uwm-image-hero__heading">{{ drupal_title() }}</h1>
            </div>
            {% if content.field_uwm_links_with_icon %}
            <div
              class="uwm-image-hero__links-with-icon__desktop col-lg-3">
              {{ content.field_uwm_links_with_icon }}
            </div>
            {% endif %}
          </div>
        </div>
        {% endblock %}
      
    </div>
  </{{ element }}>

  {% if content.field_uwm_links_with_icon %}
    <div class="uwm-image-hero__links-with-icon container-xl p-0"> {# row #}
      {{ content.field_uwm_links_with_icon }}
    </div>
  {% endif %}
{% endblock paragraph %}


{# <div class="">
      <div class="medical-service-hero__background full-width-image"
           ></div>
      <div class="container container-lg">
        <div class="row">
          <div class="medical-service-hero__content col-lg-8">
            <h1 class="medical-service-hero__heading">{{ label }}</h1>
            <img class="hero__angle-divider hidden-lg"
                 src="{{ file_url('themes/custom/uwmed/dist/assets/hero-angle-lines.png') }}"
                 alt=""/>
            {{ content.field_subheading }}
          </div>
          
        </div>
      </div>
    </div> #}