{"version":3,"sources":["provider-resources.js"],"names":["$","Drupal","behaviors","uwmedProviderResourcesLinkGenerator","attach","context","settings","generateLink","checked","querystring","each","index","element","name","value","url","location","protocol","host","pathname","join","copyToClipboard","str","el","document","createElement","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","on","e","target","text","jQuery"],"mappings":";;AAAA;;;;;AAKA,CAAC,UAAUA,CAAV,EAAaC,MAAb,EAAqB;;AAElBA,WAAOC,SAAP,CAAiBC,mCAAjB,GAAuD;;AAEnDC,gBAAQ,gBAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AACjC,qBAASC,YAAT,GAAwB;AACpB,oBAAIC,UAAUR,EAAE,gGAAF,CAAd;AACA,oBAAIS,cAAc,GAAlB;;AAEAT,kBAAEU,IAAF,CAAOF,OAAP,EAAgB,UAASG,KAAT,EAAgBC,OAAhB,EAAyB;AACrCH,mCAAeG,QAAQC,IAAR,GAAe,GAAf,GAAqBD,QAAQE,KAA5C;AACA,wBAAGN,QAAQG,QAAM,CAAd,CAAH,EAAoB;AAChBF,uCAAe,GAAf;AACH,qBAFD,MAEO;AACHA,uCAAe,SAAf;AACH;AACJ,iBAPD;;AASA,oBAAIM,MAAM,CAACC,SAASC,QAAV,EAAoB,IAApB,EAA0BD,SAASE,IAAnC,EAAyCF,SAASG,QAAlD,EAA4DV,WAA5D,EAAyEW,IAAzE,CAA8E,EAA9E,CAAV;AACA,uBAAOL,GAAP;AACH;;AAGD;AACA,qBAASM,eAAT,CAAyBC,GAAzB,EAA8B;AAC1B,oBAAIC,KAAKC,SAASC,aAAT,CAAuB,UAAvB,CAAT,CAD0B,CACoB;AAC9CF,mBAAGT,KAAH,GAAWQ,GAAX,CAF0B,CAEsB;AAChDC,mBAAGG,YAAH,CAAgB,UAAhB,EAA4B,EAA5B,EAH0B,CAGsB;AAChDH,mBAAGI,KAAH,CAASC,QAAT,GAAoB,UAApB;AACAL,mBAAGI,KAAH,CAASE,IAAT,GAAgB,SAAhB,CAL0B,CAKsB;AAChDL,yBAASM,IAAT,CAAcC,WAAd,CAA0BR,EAA1B,EAN0B,CAMsB;AAChD,oBAAIS,WACJR,SAASS,YAAT,GAAwBC,UAAxB,GAAqC,CAArC,CAA8C;AAA9C,kBACMV,SAASS,YAAT,GAAwBE,UAAxB,CAAmC,CAAnC,CADN,CACgD;AADhD,kBAEM,KAHN,CAP0B,CAUsB;AAChDZ,mBAAGa,MAAH,GAX0B,CAWsB;AAChDZ,yBAASa,WAAT,CAAqB,MAArB,EAZ0B,CAYsB;AAChDb,yBAASM,IAAT,CAAcQ,WAAd,CAA0Bf,EAA1B,EAb0B,CAasB;AAChD,oBAAIS,QAAJ,EAAc;AAAkC;AAChDR,6BAASS,YAAT,GAAwBM,eAAxB,GADc,CACgC;AAC9Cf,6BAASS,YAAT,GAAwBO,QAAxB,CAAiCR,QAAjC,EAFc,CAEgC;AAC7C;AACJ;;AAEDhC,cAAE,eAAF,EAAmByC,EAAnB,CAAsB,OAAtB,EAA+B,UAASC,CAAT,EAAY;AACvC,oBAAI3B,MAAMR,cAAV;AACAc,gCAAgBN,GAAhB;AACAf,kBAAE0C,EAAEC,MAAJ,EAAYC,IAAZ,CAAiB,cAAjB;AAEH,aALD;AAMH;AAhDkD,KAAvD;AAkDH,CApDD,EAoDGC,MApDH,EAoDW5C,MApDX","file":"provider-resources.js","sourcesContent":["/**\n * @file\n * Javascript for the /provider-resource page.\n */\n\n(function ($, Drupal) {\n\n    Drupal.behaviors.uwmedProviderResourcesLinkGenerator = {\n\n        attach: function (context, settings) {\n            function generateLink() {\n                var checked = $('#views-exposed-form-uwm-provider-resources-uwm-provider-resources-block input[checked=checked]');\n                var querystring = '?';\n    \n                $.each(checked, function(index, element) {\n                    querystring += element.name + '=' + element.value; \n                    if(checked[index+1]){\n                        querystring += '&';\n                    } else {\n                        querystring += '#filter';\n                    }\n                });\n\n                var url = [location.protocol, '//', location.host, location.pathname, querystring].join('');\n                return url\n            }\n\n\n            // inspired by https://gist.github.com/Chalarangelo/4ff1e8c0ec03d9294628efbae49216db#file-copytoclipboard-js\n            function copyToClipboard(str) {\n                var el = document.createElement('textarea');  // Create a <textarea> element\n                el.value = str;                                 // Set its value to the string that you want copied\n                el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\n                el.style.position = 'absolute';                 \n                el.style.left = '-9999px';                      // Move outside the screen to make it invisible\n                document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\n                var selected =            \n                document.getSelection().rangeCount > 0        // Check if there is any content selected previously\n                    ? document.getSelection().getRangeAt(0)     // Store selection if found\n                    : false;                                    // Mark as false to know no selection existed before\n                el.select();                                    // Select the <textarea> content\n                document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\n                document.body.removeChild(el);                  // Remove the <textarea> element\n                if (selected) {                                 // If a selection existed before copying\n                document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\n                document.getSelection().addRange(selected);   // Restore the original selection\n                }\n            };\n\n            $('.js-link-copy').on('click', function(e) {\n                var url = generateLink();\n                copyToClipboard(url);\n                $(e.target).text('Link copied!')\n\n            });\n        }\n    }\n})(jQuery, Drupal);"]}