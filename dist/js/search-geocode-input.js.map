{"version":3,"sources":["search-geocode-input.js"],"names":["$","Drupal","GOOGLE_API_KEY","GOOGLE_API_KEY_TEMP","GOOGLE_GEOCODER_BASEURL","PREF_BOUNDING_BOX","behaviors","uwmGeocodeInputInit","attach","context","settings","document","ready","append","$input","getGeocodeInput","keypress","e","which","getGeocodeResponse","queryString","apikey","window","location","host","indexOf","setResponseMessage","val","ajax","url","dataType","type","data","key","address","bounds","success","response","status","handleGeocodeSuccess","handleGeocodeError","error","xhr","apiResponse","latLong","results","geometry","lat","lng","message","attr","jQuery"],"mappings":";;AAAA;;;;AAIA;AACA,CAAC,UAAUA,CAAV,EAAaC,MAAb,EAAqB;;AAEpB;;;;;AAKA,MAAMC,iBAAiB,yCAAvB;;AAEA;;;;;AAKA,MAAMC,sBAAsB,yCAA5B;AACA;;;;;AAKA,MAAMC,0BAA0B,oDAAhC;;AAEA;;;;;AAKA,MAAMC,oBAAoB,6CAA1B;;AAEA;;;;AAIAJ,SAAOK,SAAP,CAAiBC,mBAAjB,GAAuC;AAErCC,UAFqC,kBAE9BC,OAF8B,EAErBC,QAFqB,EAEX;;AAExBV,QAAEW,QAAF,EAAYC,KAAZ,CAAkB,YAAM;AACtBZ,UAAE,yBAAF,EAA6Ba,MAA7B,CAAoC,oCAApC;;AAEA,YAAMC,SAASC,iBAAf;AACAD,eAAOE,QAAP,CAAgB,aAAK;AACnB,cAAIC,EAAEC,KAAF,KAAY,EAAhB,EAAoB;AAClBC;AACD;AACF,SAJD;AAKD,OATD;AAWD;AAfoC,GAAvC;;AAoBA;;;;;AAKA;;;;AAIA,MAAMJ,kBAAkB,SAAlBA,eAAkB,GAAY;;AAElC,WAAOf,EAAE,iDAAF,CAAP;AACD,GAHD;;AAKA;;;;AAIA,MAAMmB,qBAAqB,SAArBA,kBAAqB,CAAUC,WAAV,EAAuB;;AAEhD,QAAIC,SAASnB,cAAb;AACA,QAAIoB,OAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,OAArB,CAA6B,OAA7B,IAAwC,CAA5C,EAA+C;AAC7CJ,eAASlB,mBAAT;AACD;;AAEDuB,0CAAsCX,kBAAkBY,GAAlB,EAAtC;;AAEA3B,MAAE4B,IAAF,CAAO;AACLC,WAAKzB,uBADA;AAEL0B,gBAAU,MAFL;AAGLC,YAAM,KAHD;AAILC,YAAM;AACJC,aAAKZ,MADD;AAEJa,iBAASnB,kBAAkBY,GAAlB,EAFL;AAGJQ,gBAAQ9B;AAHJ,OAJD;AASL+B,aATK,mBASGC,QATH,EASa;AAChB,YAAIA,SAASC,MAAT,KAAoB,IAAxB,EAA8B;AAC5BC,+BAAqBF,QAArB;AACD,SAFD,MAGK;AACHG,6BAAmBH,QAAnB;AACD;AACF,OAhBI;AAiBLI,WAjBK,iBAiBCC,GAjBD,EAiBM;AACTF;AACD;AAnBI,KAAP;AAsBD,GA/BD;;AAiCA;;;;;AAKA,MAAMD,uBAAuB,SAAvBA,oBAAuB,CAAUI,WAAV,EAAuB;;AAElDjB,8CAA0CX,kBAAkBY,GAAlB,EAA1C;AACA;AACA,QAAMiB,UAAU,CAAC,CAAC,CAACD,eAAe,EAAhB,EAAoBE,OAApB,IAA+B,EAAhC,EAAoCC,QAApC,IAAgD,EAAjD,EAAqDvB,QAArE;AACA,QAAIqB,QAAQG,GAAR,IAAeH,QAAQI,GAA3B,EAAgC;AAC9BtB,yBAAsBkB,QAAQG,GAA9B,SAAyCH,QAAQI,GAAjD;AACD;;AAED;AAED,GAXD;;AAaA;;;;;AAKA,MAAMR,qBAAqB,SAArBA,kBAAqB,CAAUG,WAAV,EAAuB;;AAEhDjB,2CAAuCX,kBAAkBY,GAAlB,EAAvC;AAGD,GALD;;AAOA;;;;AAIA,MAAMD,qBAAqB,SAArBA,kBAAqB,CAAUuB,OAAV,EAAmB;;AAE5C,QAAMnC,SAASC,iBAAf;AACAD,WAAOa,GAAP,CAAW,EAAX;AACAb,WAAOoC,IAAP,CAAY,aAAZ,EAA2BD,OAA3B;AAED,GAND;AASD,CAnJD,EAoJCE,MApJD,EAoJSlD,MApJT","file":"search-geocode-input.js","sourcesContent":["/**\n * @file\n * Custom JavaScript for UW Medicine.\n */\n//\n(function ($, Drupal) {\n\n  /**\n   * Provide API key for requests.\n   * @see https://console.cloud.google.com/home/dashboard?project=uw-medicine\n   * @type {string}\n   */\n  const GOOGLE_API_KEY = 'AIzaSyDtdMuu9kpdNE--4xUNT1aSuy-wh9vxFtg';\n\n  /**\n   * Provide API key without hostname restrictions.\n   * @see https://console.cloud.google.com/home/dashboard?project=uw-medicine\n   * @type {string}\n   */\n  const GOOGLE_API_KEY_TEMP = 'AIzaSyB6ziIhPThPpqSPKLeJKs1wnblBXQbbxe4';\n  /**\n   * Provide base url for our geocode, Google.\n   * @see https://developers.google.com/maps/documentation/geocoding/start\n   * @type {string}\n   */\n  const GOOGLE_GEOCODER_BASEURL = 'https://maps.googleapis.com/maps/api/geocode/json?';\n\n  /**\n   * Preferred area for matches; note other spots may get matched.\n   * @see https://developers.google.com/maps/documentation/geocoding/intro#Viewports\n   * @type {string}\n   */\n  const PREF_BOUNDING_BOX = '46.709241,-123.422571|48.254976,-119.381319';\n\n  /**\n   * Attach behaviors once Drupal readies page.\n   * @type {{attach(*, *): void}}\n   */\n  Drupal.behaviors.uwmGeocodeInputInit = {\n\n    attach(context, settings) {\n\n      $(document).ready(() => {\n        $('section.content-topper ').append('<input class=\"geo-location-input\">');\n\n        const $input = getGeocodeInput();\n        $input.keypress(e => {\n          if (e.which === 13) {\n            getGeocodeResponse();\n          }\n        });\n      });\n\n    }\n\n  };\n\n\n  /*\n   * PRIVATE FUNCTIONS\n   *\n   */\n\n  /**\n   *\n   * @return {*|HTMLElement}\n   */\n  const getGeocodeInput = function () {\n\n    return $('section.content-topper input.geo-location-input');\n  };\n\n  /**\n   *\n   * @param queryString\n   */\n  const getGeocodeResponse = function (queryString) {\n\n    let apikey = GOOGLE_API_KEY;\n    if (window.location.host.indexOf('local') > 0) {\n      apikey = GOOGLE_API_KEY_TEMP;\n    }\n\n    setResponseMessage(`Searching for ${  getGeocodeInput().val()  }...`);\n\n    $.ajax({\n      url: GOOGLE_GEOCODER_BASEURL,\n      dataType: \"json\",\n      type: \"GET\",\n      data: {\n        key: apikey,\n        address: getGeocodeInput().val(),\n        bounds: PREF_BOUNDING_BOX\n      },\n      success(response) {\n        if (response.status === \"OK\") {\n          handleGeocodeSuccess(response);\n        }\n        else {\n          handleGeocodeError(response);\n        }\n      },\n      error(xhr) {\n        handleGeocodeError();\n      }\n    });\n\n  };\n\n  /**\n   *\n   * @param apiResponse\n   * @return {*}\n   */\n  const handleGeocodeSuccess = function (apiResponse) {\n\n    setResponseMessage(`Found results for ${  getGeocodeInput().val()  }.`);\n    // let latLon = response.results[0].geometry.location;\n    const latLong = (((apiResponse || {}).results || []).geometry || {}).location;\n    if (latLong.lat && latLong.lng) {\n      setResponseMessage(`${latLong.lat  },${  latLong.lng}`);\n    }\n\n    // Set lat, long, submit form...\n\n  };\n\n  /**\n   *\n   * @param apiResponse\n   * @return {*}\n   */\n  const handleGeocodeError = function (apiResponse) {\n\n    setResponseMessage(`No results for ${  getGeocodeInput().val()  }.`);\n\n\n  };\n\n  /**\n   * \n   * @param message\n   */\n  const setResponseMessage = function (message) {\n\n    const $input = getGeocodeInput();\n    $input.val(\"\");\n    $input.attr('placeholder', message);\n\n  };\n\n\n})\n(jQuery, Drupal);\n"]}